-- Script recreado con panel rojo y negro y texto "papita y Tato v1"
-- Compatible con cualquier ejecutador
-- Basado en AgeOfHerosUltimate.txt con todas las funciones de las capturas de pantalla

-- Cargar la biblioteca UI
local success, Library = pcall(function()
    return loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
end)

if not success then
    -- Intento alternativo de carga para mayor compatibilidad
    Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua", true))()
end

-- Crear la ventana principal con panel rojo y negro
local Window = Library.CreateLib("papita y Tato v1", "Blood")

-- Servicios
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local HttpService = game:GetService("HttpService")

-- Variables locales
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local rootPart = character:WaitForChild("HumanoidRootPart")

-- Variables globales
_G.killAura = false
_G.teleStuckAura = false
_G.teleKillAura = false
_G.teleAuraRange = 30
_G.autoActivateMetal = false
_G.walkSpeed = 16
_G.jumpPower = 50
_G.saveTP = false
_G.antiTele = false
_G.shield = false
_G.antiCrash = false
_G.antiFling = false
_G.antiFlingV2 = false
_G.tpLoopTarget = false
_G.spectateTarget = false
_G.killTarget = false
_G.laserTarget = false
_G.targetPlayer = ""
_G.targetInfo = {
    name = "none",
    level = "none",
    inSafezone = false,
    isAlive = false,
    distance = "? studs"
}
_G.selectedStat = "none"
_G.autoUpgrade = false
_G.pointsAmount = 1

-- Crear pestaÃ±as
local HomeTab = Window:NewTab("Home")
local PlayerTab = Window:NewTab("Player")
local TeleTab = Window:NewTab("Telekinesis")
local TargetTab = Window:NewTab("Target")
local AutoTab = Window:NewTab("Auto")

-- Secciones de Home
local HomeSection = HomeTab:NewSection("Home")

-- Secciones de Player
local MovementSection = PlayerTab:NewSection("Movement & Utility")
local ProtectionSection = PlayerTab:NewSection("Protection")

-- Secciones de Telekinesis
local TeleSection = TeleTab:NewSection("Telekinesis")

-- Secciones de Target
local TargetSection = TargetTab:NewSection("Target")
local TargetInfoSection = TargetTab:NewSection("Target Info")

-- Secciones de Auto
local AutoSection = AutoTab:NewSection("Auto")
local AutoStatsSection = AutoTab:NewSection("Auto Stats")

-- Funciones de utilidad
local function getNearestPlayer(maxDistance)
    local nearestPlayer = nil
    local shortestDistance = maxDistance or math.huge
    
    for _, p in pairs(Players:GetPlayers()) do
        if p ~= player and p.Character and p.Character:FindFirstChild("HumanoidRootPart") and p.Character:FindFirstChild("Humanoid") and p.Character.Humanoid.Health > 0 then
            local distance = (rootPart.Position - p.Character.HumanoidRootPart.Position).Magnitude
            if distance < shortestDistance then
                shortestDistance = distance
                nearestPlayer = p
            end
        end
    end
    
    return nearestPlayer, shortestDistance
end

local function updateTargetInfo()
    if _G.targetPlayer and _G.targetPlayer ~= "" then
        local targetPlayerObj = Players:FindFirstChild(_G.targetPlayer)
        if targetPlayerObj and targetPlayerObj.Character and targetPlayerObj.Character:FindFirstChild("HumanoidRootPart") and targetPlayerObj.Character:FindFirstChild("Humanoid") then
            local distance = (rootPart.Position - targetPlayerObj.Character.HumanoidRootPart.Position).Magnitude
            _G.targetInfo = {
                name = targetPlayerObj.Name,
                level = targetPlayerObj.Level and targetPlayerObj.Level.Value or "none",
                inSafezone = false, -- Esto requerirÃ­a lÃ³gica especÃ­fica del juego
                isAlive = targetPlayerObj.Character.Humanoid.Health > 0,
                distance = math.floor(distance) .. " studs"
            }
        else
            _G.targetInfo = {
                name = "none",
                level = "none",
                inSafezone = false,
                isAlive = false,
                distance = "? studs"
            }
        end
    end
end

local function getPlayerList()
    local playerList = {}
    for _, p in pairs(Players:GetPlayers()) do
        if p ~= player then
            table.insert(playerList, p.Name)
        end
    end
    return playerList
end

local function activateShield()
    if _G.shield then
        -- Intentar activar el escudo usando diferentes mÃ©todos posibles
        pcall(function()
            if ReplicatedStorage:FindFirstChild("Shield") then
                ReplicatedStorage.Shield:FireServer(true)
            elseif ReplicatedStorage:FindFirstChild("ActivateShield") then
                ReplicatedStorage.ActivateShield:FireServer(true)
            elseif ReplicatedStorage:FindFirstChild("Events") and ReplicatedStorage.Events:FindFirstChild("Shield") then
                ReplicatedStorage.Events.Shield:FireServer(true)
            end
        end)
    end
end

local function activateMetal()
    if _G.autoActivateMetal then
        -- Intentar activar el metal usando diferentes mÃ©todos posibles
        pcall(function()
            if ReplicatedStorage:FindFirstChild("Metal") then
                ReplicatedStorage.Metal:FireServer(true)
            elseif ReplicatedStorage:FindFirstChild("ActivateMetal") then
                ReplicatedStorage.ActivateMetal:FireServer(true)
            elseif ReplicatedStorage:FindFirstChild("Events") and ReplicatedStorage.Events:FindFirstChild("Metal") then
                ReplicatedStorage.Events.Metal:FireServer(true)
            end
        end)
    end
end

-- SecciÃ³n de Telekinesis
TeleSection:NewToggle("Kill Aura", "", function(state)
    _G.killAura = state
    
    while _G.killAura and wait() do
        pcall(function()
            local nearestPlayer = getNearestPlayer(50)
            if nearestPlayer and nearestPlayer.Character and nearestPlayer.Character:FindFirstChild("HumanoidRootPart") then
                -- Intentar usar diferentes mÃ©todos para atacar
                if ReplicatedStorage:FindFirstChild("Attack") then
                    ReplicatedStorage.Attack:FireServer(nearestPlayer.Character.HumanoidRootPart.Position)
                elseif ReplicatedStorage:FindFirstChild("Combat") then
                    ReplicatedStorage.Combat:FireServer(nearestPlayer.Character.HumanoidRootPart.Position)
                elseif ReplicatedStorage:FindFirstChild("Events") and ReplicatedStorage.Events:FindFirstChild("Attack") then
                    ReplicatedStorage.Events.Attack:FireServer(nearestPlayer.Character.HumanoidRootPart.Position)
                end
            end
        end)
    end
end)

TeleSection:NewSlider("Tele Aura Range (depends on grab range upgrade)", "", 100, 1, function(value)
    _G.teleAuraRange = value
end)

TeleSection:NewToggle("Tele Stuck Aura", "", function(state)
    _G.teleStuckAura = state
    
    while _G.teleStuckAura and wait() do
        pcall(function()
            local nearestPlayer = getNearestPlayer(_G.teleAuraRange)
            if nearestPlayer and nearestPlayer.Character and nearestPlayer.Character:FindFirstChild("HumanoidRootPart") then
                -- Intentar usar diferentes mÃ©todos para telekinesis
                if ReplicatedStorage:FindFirstChild("Telekinesis") then
                    ReplicatedStorage.Telekinesis:FireServer(nearestPlayer.Character)
                elseif ReplicatedStorage:FindFirstChild("TelekinesisActivate") then
                    ReplicatedStorage.TelekinesisActivate:FireServer(nearestPlayer.Character)
                elseif ReplicatedStorage:FindFirstChild("Events") and ReplicatedStorage.Events:FindFirstChild("Telekinesis") then
                    ReplicatedStorage.Events.Telekinesis:FireServer(nearestPlayer.Character)
                end
            end
        end)
    end
end)

TeleSection:NewToggle("Tele Kill Aura", "", function(state)
    _G.teleKillAura = state
    
    while _G.teleKillAura and wait() do
        pcall(function()
            local nearestPlayer = getNearestPlayer(_G.teleAuraRange)
            if nearestPlayer and nearestPlayer.Character and nearestPlayer.Character:FindFirstChild("HumanoidRootPart") then
                -- Primero activar telekinesis
                if ReplicatedStorage:FindFirstChild("Telekinesis") then
                    ReplicatedStorage.Telekinesis:FireServer(nearestPlayer.Character)
                elseif ReplicatedStorage:FindFirstChild("TelekinesisActivate") then
                    ReplicatedStorage.TelekinesisActivate:FireServer(nearestPlayer.Character)
                elseif ReplicatedStorage:FindFirstChild("Events") and ReplicatedStorage.Events:FindFirstChild("Telekinesis") then
                    ReplicatedStorage.Events.Telekinesis:FireServer(nearestPlayer.Character)
                end
                
                -- Luego atacar
                wait(0.1)
                if ReplicatedStorage:FindFirstChild("Attack") then
                    ReplicatedStorage.Attack:FireServer(nearestPlayer.Character.HumanoidRootPart.Position)
                elseif ReplicatedStorage:FindFirstChild("Combat") then
                    ReplicatedStorage.Combat:FireServer(nearestPlayer.Character.HumanoidRootPart.Position)
                elseif ReplicatedStorage:FindFirstChild("Events") and ReplicatedStorage.Events:FindFirstChild("Attack") then
                    ReplicatedStorage.Events.Attack:FireServer(nearestPlayer.Character.HumanoidRootPart.Position)
                end
            end
        end)
    end
end)

-- SecciÃ³n de Movement & Utility
MovementSection:NewSlider("Player Speed", "", 500, 16, function(value)
    _G.walkSpeed = value
    humanoid.WalkSpeed = value
end)

MovementSection:NewSlider("Jump Power", "", 500, 50, function(value)
    _G.jumpPower = value
    humanoid.JumpPower = value
end)

MovementSection:NewToggle("Auto Activate Metal after dying", "", function(state)
    _G.autoActivateMetal = state
end)

MovementSection:NewToggle("Unlimited Stamina (might not work)", "", function(state)
    _G.unlimitedStamina = state
    
    while _G.unlimitedStamina and wait() do
        pcall(function()
            -- Intentar diferentes mÃ©todos para establecer la energÃ­a al mÃ¡ximo
            if player:FindFirstChild("Stamina") then
                player.Stamina.Value = player.Stamina.MaxValue
            elseif player:FindFirstChild("Energy") then
                player.Energy.Value = player.Energy.MaxValue
            elseif player:FindFirstChild("Stats") and player.Stats:FindFirstChild("Stamina") then
                player.Stats.Stamina.Value = player.Stats.Stamina.MaxValue
            end
        end)
    end
end)

-- SecciÃ³n de Protection
ProtectionSection:NewToggle("Save Teleport when under 35% Health", "", function(state)
    _G.saveTP = state
    
    while _G.saveTP and wait(0.1) do
        pcall(function()
            if humanoid.Health < (humanoid.MaxHealth * 0.35) then
                -- Teleportar a una zona segura
                rootPart.CFrame = CFrame.new(0, 100, 0) -- Ajustar a una ubicaciÃ³n segura del juego
            end
        end)
    end
end)

ProtectionSection:NewToggle("Anti Tele", "", function(state)
    _G.antiTele = state
    
    while _G.antiTele and wait() do
        pcall(function()
            -- Buscar y destruir cualquier intento de telequinesis
            for _, part in pairs(character:GetDescendants()) do
                if part.Name == "telekinesisPosition" then
                    part:Destroy()
                end
            end
        end)
    end
end)

ProtectionSection:NewToggle("Shield", "", function(state)
    _G.shield = state
    activateShield()
end)

ProtectionSection:NewButton("Anti Crash", "", function()
    -- Implementar anti-crash
    pcall(function()
        for _, obj in pairs(workspace:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") or obj:IsA("Smoke") or obj:IsA("Fire") then
                obj.Enabled = false
            end
        end
        
        game:GetService("Lighting").GlobalShadows = false
        game:GetService("Lighting").FogEnd = 9e9
        
        settings().Rendering.QualityLevel = 1
    end)
end)

ProtectionSection:NewToggle("Anti Fling", "", function(state)
    _G.antiFling = state
    
    while _G.antiFling and wait() do
        pcall(function()
            for _, part in pairs(character:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.Velocity = Vector3.new(0, 0, 0)
                    part.RotVelocity = Vector3.new(0, 0, 0)
                end
            end
        end)
    end
end)

ProtectionSection:NewToggle("Anti-Fling V2 (can decrease fps)", "", function(state)
    _G.antiFlingV2 = state
    
    if _G.antiFlingV2 then
        -- MÃ©todo alternativo anti-fling
        local antiFlingStat = Instance.new("BodyGyro")
        antiFlingStat.MaxTorque = Vector3.new(math.huge, math.huge, math.huge)
        antiFlingStat.P = 1e6
        antiFlingStat.Parent = rootPart
        
        while _G.antiFlingV2 and wait() do
            antiFlingStat.CFrame = rootPart.CFrame
        end
        
        if not _G.antiFlingV2 and antiFlingStat then
            antiFlingStat:Destroy()
        end
    end
end)

-- SecciÃ³n de Target
TargetSection:NewButton("Teleport to Target", "", function()
    if _G.targetPlayer and _G.targetPlayer ~= "" then
        local targetPlayerObj = Players:FindFirstChild(_G.targetPlayer)
        if targetPlayerObj and targetPlayerObj.Character and targetPlayerObj.Character:FindFirstChild("HumanoidRootPart") then
            rootPart.CFrame = targetPlayerObj.Character.HumanoidRootPart.CFrame
        end
    end
end)

TargetSection:NewToggle("TP Loop Target", "", function(state)
    _G.tpLoopTarget = state
    
    while _G.tpLoopTarget and wait() do
        pcall(function()
            if _G.targetPlayer and _G.targetPlayer ~= "" then
                local targetPlayerObj = Players:FindFirstChild(_G.targetPlayer)
                if targetPlayerObj and targetPlayerObj.Character and targetPlayerObj.Character:FindFirstChild("HumanoidRootPart") then
                    rootPart.CFrame = targetPlayerObj.Character.HumanoidRootPart.CFrame
                end
            end
        end)
    end
end)

TargetSection:NewToggle("Spectate Target", "", function(state)
    _G.spectateTarget = state
    
    if _G.spectateTarget then
        if _G.targetPlayer and _G.targetPlayer ~= "" then
            local targetPlayerObj = Players:FindFirstChild(_G.targetPlayer)
            if targetPlayerObj and targetPlayerObj.Character then
                workspace.CurrentCamera.CameraSubject = targetPlayerObj.Character.Humanoid
            end
        end
    else
        workspace.CurrentCamera.CameraSubject = humanoid
    end
end)

TargetSection:NewToggle("Kill Target", "", function(state)
    _G.killTarget = state
    
    while _G.killTarget and wait() do
        pcall(function()
            if _G.targetPlayer and _G.targetPlayer ~= "" then
                local targetPlayerObj = Players:FindFirstChild(_G.targetPlayer)
                if targetPlayerObj and targetPlayerObj.Character and targetPlayerObj.Character:FindFirstChild("HumanoidRootPart") then
                    -- Teleportar cerca del objetivo
                    rootPart.CFrame = targetPlayerObj.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, 3)
                    
                    -- Atacar al objetivo
                    if ReplicatedStorage:FindFirstChild("Attack") then
                        ReplicatedStorage.Attack:FireServer(targetPlayerObj.Character.HumanoidRootPart.Position)
                    elseif ReplicatedStorage:FindFirstChild("Combat") then
                        ReplicatedStorage.Combat:FireServer(targetPlayerObj.Character.HumanoidRootPart.Position)
                    elseif ReplicatedStorage:FindFirstChild("Events") and ReplicatedStorage.Events:FindFirstChild("Attack") then
                        ReplicatedStorage.Events.Attack:FireServer(targetPlayerObj.Character.HumanoidRootPart.Position)
                    end
                end
            end
        end)
    end
end)

TargetSection:NewToggle("Laser Target", "", function(state)
    _G.laserTarget = state
    
    local laser
    if _G.laserTarget then
        laser = Instance.new("Beam")
        local a0 = Instance.new("Attachment")
        local a1 = Instance.new("Attachment")
        
        a0.Parent = rootPart
        laser.Attachment0 = a0
        laser.Width0 = 0.5
        laser.Width1 = 0.5
        laser.FaceCamera = true
        laser.Color = ColorSequence.new(Color3.fromRGB(255, 0, 0))
        laser.Parent = rootPart
        
        while _G.laserTarget and wait() do
            pcall(function()
                if _G.targetPlayer and _G.targetPlayer ~= "" then
                    local targetPlayerObj = Players:FindFirstChild(_G.targetPlayer)
                    if targetPlayerObj and targetPlayerObj.Character and targetPlayerObj.Character:FindFirstChild("HumanoidRootPart") then
                        if not a1.Parent then
                            a1.Parent = targetPlayerObj.Character.HumanoidRootPart
                        end
                        laser.Attachment1 = a1
                    end
                end
            end)
        end
    else
        if laser then
            laser:Destroy()
        end
    end
end)

-- SecciÃ³n de Target Info
local targetPlayerInput = TargetInfoSection:NewTextBox("Target Player", "", "User- or Displayname", function(text)
    _G.targetPlayer = text
    updateTargetInfo()
end)

local targetInfoLabel = TargetInfoSection:NewLabel("Target Info\nName: none\nLevel: none\nIs in safezone?: false\nIs alive?: false\nDistance to you: ? studs")

-- Actualizar la informaciÃ³n del objetivo periÃ³dicamente
spawn(function()
    while wait(1) do
        updateTargetInfo()
        targetInfoLabel:UpdateLabel("Target Info\nName: " .. _G.targetInfo.name .. "\nLevel: " .. _G.targetInfo.level .. "\nIs in safezone?: " .. tostring(_G.targetInfo.inSafezone) .. "\nIs alive?: " .. tostring(_G.targetInfo.isAlive) .. "\nDistance to you: " .. _G.targetInfo.distance)
    end
end)

-- SecciÃ³n de Auto
AutoSection:NewToggle("Auto Collect Orbs", "", function(state)
    _G.autoCollect = state
    
    while _G.autoCollect and wait(0.5) do
        pcall(function()
            for _, orb in pairs(workspace:GetDescendants()) do
                if orb:IsA("BasePart") and (orb.Name:find("Orb") or orb.Name:find("orb")) and orb:FindFirstChild("TouchInterest") then
                    firetouchinterest(rootPart, orb, 0)
                    firetouchinterest(rootPart, orb, 1)
                end
            end
        end)
    end
end)

AutoSection:NewToggle("Auto Rebirth", "", function(state)
    _G.autoRebirth = state
    
    while _G.autoRebirth and wait(5) do
        pcall(function()
            -- Intentar diferentes mÃ©todos para rebirth
            if ReplicatedStorage:FindFirstChild("Rebirth") then
                ReplicatedStorage.Rebirth:FireServer()
            elseif ReplicatedStorage:FindFirstChild("RebirthEvent") then
                ReplicatedStorage.RebirthEvent:FireServer()
            elseif ReplicatedStorage:FindFirstChild("Events") and ReplicatedStorage.Events:FindFirstChild("Rebirth") then
                ReplicatedStorage.Events.Rebirth:FireServer()
            end
        end)
    end
end)

-- SecciÃ³n de Auto Stats (nueva)
AutoStatsSection:NewButton("Reset Stats", "", function()
